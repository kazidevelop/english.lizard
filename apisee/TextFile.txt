//using Microsoft.AspNetCore;
//using Microsoft.AspNetCore.Hosting;
//using Microsoft.AspNetCore.Server.HttpSys;

//namespace apisee
//{
//    public class Program
//    {
//        public static void Main(string[] args)
//        {
//            CreateWebHostBuilder(args).Build().Run();
//        }

//        public static IWebHostBuilder CreateWebHostBuilder(string[] args)
//        {

//          return  WebHost.CreateDefaultBuilder(args)
//                .UseStartup<Startup>()
//                .UseHttpSys(options =>
//                {
//                    // The following options are set to default values.
//                    options.Authentication.Schemes = AuthenticationSchemes.None;
//                    options.Authentication.AllowAnonymous = true;
//                    options.MaxConnections = null;
//                    options.MaxRequestBodySize = 30000000;
//                    options.UrlPrefixes.Add("http://localhost:5000");
//                    options.UrlPrefixes.Add("https://localhost:5001");
//                });
//          //  return WebHost.CreateDefaultBuilder(args)
//             //   .UseStartup<Startup>();
//        }
//    }
//}
//using Microsoft.AspNetCore;
//using Microsoft.AspNetCore.Hosting;
//using Microsoft.AspNetCore.Server.HttpSys;

//namespace apisee
//{
//    public class Program
//    {
//        public static void Main(string[] args)
//        {
//            CreateWebHostBuilder(args).Build().Run();
//        }

//        public static IWebHostBuilder CreateWebHostBuilder(string[] args)
//        {

//          return  WebHost.CreateDefaultBuilder(args)
//                .UseStartup<Startup>()
//                .UseHttpSys(options =>
//                {
//                    // The following options are set to default values.
//                    options.Authentication.Schemes = AuthenticationSchemes.None;
//                    options.Authentication.AllowAnonymous = true;
//                    options.MaxConnections = null;
//                    options.MaxRequestBodySize = 30000000;
//                    options.UrlPrefixes.Add("http://localhost:5000");
//                    options.UrlPrefixes.Add("https://localhost:5001");
//                });
//          //  return WebHost.CreateDefaultBuilder(args)
//             //   .UseStartup<Startup>();
//        }
//    }
//}

using Microsoft.AspNetCore;
using Microsoft.AspNetCore.Hosting;
using Microsoft.AspNetCore.Server.HttpSys;
using System;
using Microsoft.AspNetCore.Builder;
using Microsoft.AspNetCore.Hosting;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Server.HttpSys;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Logging;
namespace apisee
{
    

   
        public class Startup
        {
            public void ConfigureServices(IServiceCollection services)
            {
                // Server options can be configured here instead of in Main.
                services.Configure<HttpSysOptions>(options =>
                {
                    options.Authentication.Schemes = AuthenticationSchemes.None;
                    options.Authentication.AllowAnonymous = true;
                });
            }

            public void Configure(IApplicationBuilder app)
            {
                app.Run(async context =>
                {
                    context.Response.ContentType = "text/plain";
                    await context.Response.WriteAsync("Hello world from " + context.Request.Host + " at " + DateTime.Now);
                });
            }

            public static void Main(string[] args)
            {
                var host = new WebHostBuilder()
                    .ConfigureLogging(factory => factory.AddConsole())
                    .UseStartup<Startup>()
                    .UseHttpSys(options =>
                    {
                        options.UrlPrefixes.Add("http://192.168.43.217:9090");
                        options.Authentication.Schemes = AuthenticationSchemes.None;
                        options.Authentication.AllowAnonymous = true;
                    })
                    .Build();

                host.Run();
            }
        }
    }

